{"ast":null,"code":"var _jsxFileName = \"/home/divyanshu/nodejs/letsChat/client/src/components/dashboard/dashboard.js\";\nimport React, { useState, useEffect } from 'react';\nimport { Link, useHistory } from \"react-router-dom\";\nimport makeToast from \"../../toaster\";\nimport axios from 'axios';\n\nconst Dashboard = props => {\n  const [room, setRoom] = useState('');\n  const history = useHistory();\n  const [chatrooms, setChatrooms] = React.useState([]);\n\n  const getChatrooms = () => {\n    axios.get(\"http://localhost:5000/chatrooms\", {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(response => {\n      // console.log(response.data)\n      setChatrooms(response.data);\n    }).catch(err => {\n      console.log(err); //   setTimeout(getChatrooms, 3000);\n    });\n  };\n\n  const JoinUser = () => {\n    axios.post(\"http://localhost:5000/chatrooms\", {\n      name: room\n    }, {\n      headers: {\n        Authorization: \"Bearer \" + localStorage.getItem(\"jwt\")\n      }\n    }).then(res => {\n      // console.log(res.data)\n      if (res.data.error) {\n        makeToast(\"error\", res.data.error);\n      } else {\n        makeToast(\"success\", res.data.message);\n        history.push('/dashboard'); //  console.log(res.data)\n      }\n    }).catch(err => {\n      console.log(err); //   setTimeout(getChatrooms, 3000);\n    });\n  };\n\n  React.useEffect(() => {\n    const token = localStorage.getItem(\"jwt\"); // console.log(token);\n\n    if (!token) {\n      props.history.push(\"/login\");\n    }\n\n    getChatrooms(); // eslint-disable-next-line\n  }, [chatrooms]);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/logout\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 17\n    }\n  }, \"Logout\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardHeader\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }\n  }, \"Chatrooms\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"cardBody\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"inputGroup\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"chatroomName\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }\n  }, \"Chatroom Name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    id: \"chatroomName\",\n    placeholder: \"Create Your Chatroom\",\n    onChange: event => setRoom(event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    onClick: () => JoinUser(),\n    className: 'button mt-20',\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, \"Create Chatroom\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"chatrooms\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, chatrooms.map(chatroom => /*#__PURE__*/React.createElement(\"div\", {\n    key: chatroom._id,\n    className: \"chatroom\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  }, chatroom.name), /*#__PURE__*/React.createElement(Link, {\n    to: \"/chatroom/\" + chatroom._id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"join\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 17\n    }\n  }, \"Join\"))))));\n};\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/divyanshu/nodejs/letsChat/client/src/components/dashboard/dashboard.js"],"names":["React","useState","useEffect","Link","useHistory","makeToast","axios","Dashboard","props","room","setRoom","history","chatrooms","setChatrooms","getChatrooms","get","headers","Authorization","localStorage","getItem","then","response","data","catch","err","console","log","JoinUser","post","name","res","error","message","push","token","event","target","value","map","chatroom","_id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Link,useHistory } from \"react-router-dom\";\nimport makeToast from \"../../toaster\"\nimport axios from 'axios';\nconst Dashboard = (props) => {\n    const [room, setRoom] = useState('');\n    const history = useHistory()\n    const [chatrooms, setChatrooms] = React.useState([]);\n    const getChatrooms = () => {\n      axios\n        .get(\"http://localhost:5000/chatrooms\", {\n          headers: {\n            Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n          },\n        })\n        .then((response) => {\n            // console.log(response.data)\n          setChatrooms(response.data);\n        })\n        .catch((err) => {\n            console.log(err)\n        //   setTimeout(getChatrooms, 3000);\n        });\n    };\n\n    const JoinUser = ()=>{\n        axios\n        .post(\"http://localhost:5000/chatrooms\", {name:room},\n        {\n            headers: {\n              Authorization: \"Bearer \" + localStorage.getItem(\"jwt\"),\n            }\n          }\n\n          \n        )\n        .then((res) => {\n            // console.log(res.data)\n            if(res.data.error){\n                makeToast(\"error\", res.data.error);\n                \n             }\n             else{\n                 makeToast(\"success\", res.data.message);\n                 history.push('/dashboard')\n                //  console.log(res.data)\n             }\n        })\n        .catch((err) => {\n            console.log(err)\n        //   setTimeout(getChatrooms, 3000);\n        });\n\n        \n  \n      }\n  \n    React.useEffect(() => {\n        const token = localStorage.getItem(\"jwt\");\n    // console.log(token);\n    if (!token) {\n      props.history.push(\"/login\");\n    }\n      getChatrooms();\n      // eslint-disable-next-line\n    }, [chatrooms]);\n  \n    return (\n        \n      <div className=\"card\">\n          <Link to={\"/logout\"}>\n                <div>Logout</div>\n              </Link>\n        <div className=\"cardHeader\">Chatrooms</div>\n        <div className=\"cardBody\">\n          <div className=\"inputGroup\">\n            <label htmlFor=\"chatroomName\">Chatroom Name</label>\n            <input\n              type=\"text\"\n              id=\"chatroomName\"\n              placeholder=\"Create Your Chatroom\"\n              onChange={(event) => setRoom(event.target.value)}\n            />\n          </div>\n        </div>\n        <button onClick = {()=>JoinUser()} className={'button mt-20'} type=\"submit\">Create Chatroom</button>\n        <div className=\"chatrooms\">\n          {chatrooms.map((chatroom) => (\n            <div key={chatroom._id} className=\"chatroom\">\n              <div>{chatroom.name}</div>\n              <Link to={\"/chatroom/\" + chatroom._id}>\n                <div className=\"join\">Join</div>\n              </Link>\n            </div>\n          ))}\n\n        </div>\n      </div>\n    );\n  };\n  \n\nexport default Dashboard\n"]},"metadata":{},"sourceType":"module"}