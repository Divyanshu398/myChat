{"ast":null,"code":"var _jsxFileName = \"/home/divyanshu/nodejs/letsChat/client/src/components/chat/chat.js\";\nimport React, { useState, useEffect } from \"react\"; // import {RouteComponentProps} from \"react-router\";\n\nimport queryString from 'query-string';\nimport io from \"socket.io-client\"; // import './chat.css';\n\nlet socket;\n\nconst Chat = props => {\n  const [name, setname] = useState('');\n  const [room, setroom] = useState('');\n  const [message, setMessage] = useState('');\n  const [messages, setMessages] = useState([]);\n  const username = localStorage.getItem(\"username\");\n  const chatroom = props.match.params.name;\n  const ENDPOINT = \"localhost:5000\";\n  useEffect(() => {\n    socket = io(ENDPOINT);\n    setname(username);\n    setroom(chatroom);\n    socket.emit(\"join\", {\n      name: username,\n      room: chatroom\n    }, () => {// this is executed when callback is called in server\n    });\n    return () => {\n      socket.emit(\"disconnect\");\n      socket.off();\n    };\n  }, [ENDPOINT, chatroom]);\n  useEffect(() => {\n    socket.on(\"message\", message => {\n      setMessages([...messages, message]);\n    });\n  }, [messages]); //function for sending messsages\n\n  const sendMessage = event => {\n    event.preventDefault();\n\n    if (message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  };\n\n  console.log(message, messages);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"outerContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    value: message,\n    onChange: event => setMessage(event.target.value),\n    onKeyPress: event => event.key === 'Enter' ? sendMessage(event) : null,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 17\n    }\n  })));\n};\n\nexport default Chat;","map":{"version":3,"sources":["/home/divyanshu/nodejs/letsChat/client/src/components/chat/chat.js"],"names":["React","useState","useEffect","queryString","io","socket","Chat","props","name","setname","room","setroom","message","setMessage","messages","setMessages","username","localStorage","getItem","chatroom","match","params","ENDPOINT","emit","off","on","sendMessage","event","preventDefault","console","log","target","value","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C,C,CACA;;AACA,OAAOC,WAAP,MAAwB,cAAxB;AACA,OAAOC,EAAP,MAAe,kBAAf,C,CACA;;AACA,IAAIC,MAAJ;;AACA,MAAMC,IAAI,GAAIC,KAAD,IAAW;AACpB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBR,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACS,IAAD,EAAOC,OAAP,IAAkBV,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACW,OAAD,EAAUC,UAAV,IAAwBZ,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACa,QAAD,EAAWC,WAAX,IAA0Bd,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMe,QAAQ,GAAGC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAjB;AACA,QAAMC,QAAQ,GAAGZ,KAAK,CAACa,KAAN,CAAYC,MAAZ,CAAmBb,IAApC;AACA,QAAMc,QAAQ,GAAG,gBAAjB;AACApB,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,MAAM,GAAGD,EAAE,CAACkB,QAAD,CAAX;AACAb,IAAAA,OAAO,CAACO,QAAD,CAAP;AACAL,IAAAA,OAAO,CAACQ,QAAD,CAAP;AACAd,IAAAA,MAAM,CAACkB,IAAP,CAAY,MAAZ,EAAmB;AAACf,MAAAA,IAAI,EAACQ,QAAN;AAAeN,MAAAA,IAAI,EAACS;AAApB,KAAnB,EAAiD,MAAI,CACjD;AACH,KAFD;AAIA,WAAO,MAAI;AACPd,MAAAA,MAAM,CAACkB,IAAP,CAAY,YAAZ;AACAlB,MAAAA,MAAM,CAACmB,GAAP;AAEH,KAJD;AAOH,GAfQ,EAeP,CAACF,QAAD,EAAUH,QAAV,CAfO,CAAT;AAiBDjB,EAAAA,SAAS,CAAC,MAAI;AACVG,IAAAA,MAAM,CAACoB,EAAP,CAAU,SAAV,EAAqBb,OAAD,IAAW;AAC3BG,MAAAA,WAAW,CAAC,CAAC,GAAGD,QAAJ,EAAcF,OAAd,CAAD,CAAX;AACH,KAFD;AAGH,GAJQ,EAIP,CAACE,QAAD,CAJO,CAAT,CAzBqB,CA+BrB;;AACA,QAAMY,WAAW,GAAIC,KAAD,IAAW;AAC9BA,IAAAA,KAAK,CAACC,cAAN;;AAEA,QAAGhB,OAAH,EAAY;AACVP,MAAAA,MAAM,CAACkB,IAAP,CAAY,aAAZ,EAA2BX,OAA3B,EAAoC,MAAMC,UAAU,CAAC,EAAD,CAApD;AACD;AACF,GANA;;AAODgB,EAAAA,OAAO,CAACC,GAAR,CAAYlB,OAAZ,EAAoBE,QAApB;AAIE,sBACI;AAAK,IAAA,SAAS,EAAE,gBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AAAK,IAAA,SAAS,EAAG,WAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI;AACA,IAAA,KAAK,EAAIF,OADT;AAEA,IAAA,QAAQ,EAAKe,KAAD,IAAUd,UAAU,CAACc,KAAK,CAACI,MAAN,CAAaC,KAAd,CAFhC;AAGA,IAAA,UAAU,EAAKL,KAAD,IAASA,KAAK,CAACM,GAAN,KAAc,OAAd,GAAuBP,WAAW,CAACC,KAAD,CAAlC,GAA4C,IAHnE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,CADJ,CADJ;AAWH,CAtDD;;AAuDC,eAAerB,IAAf","sourcesContent":["import React ,{ useState, useEffect } from \"react\";\n// import {RouteComponentProps} from \"react-router\";\nimport queryString from 'query-string';\nimport io from \"socket.io-client\";\n// import './chat.css';\nlet socket\nconst Chat = (props) => {\n    const [name, setname] = useState('');\n    const [room, setroom] = useState('');\n    const [message, setMessage] = useState('');\n    const [messages, setMessages] = useState([]);\n    const username = localStorage.getItem(\"username\");\n    const chatroom = props.match.params.name\n    const ENDPOINT = \"localhost:5000\"\n    useEffect(()=>{\n        socket = io(ENDPOINT)\n        setname(username)\n        setroom(chatroom)\n        socket.emit(\"join\",{name:username,room:chatroom},()=>{\n            // this is executed when callback is called in server\n        })\n\n        return ()=>{\n            socket.emit(\"disconnect\")\n            socket.off()\n            \n        }\n        \n        \n    },[ENDPOINT,chatroom])\n\n   useEffect(()=>{\n       socket.on(\"message\",(message)=>{\n           setMessages([...messages, message])\n       })\n   },[messages]);\n\n   //function for sending messsages\n   const sendMessage = (event) => {\n    event.preventDefault();\n\n    if(message) {\n      socket.emit('sendMessage', message, () => setMessage(''));\n    }\n  }\n  console.log(message,messages)\n        \n    \n    \n    return(\n        <div className =\"outerContainer\">\n            <div className = \"container\">\n                <input\n                value = {message}\n                onChange = {(event)=> setMessage(event.target.value)}\n                onKeyPress = {(event)=>event.key === 'Enter'? sendMessage(event) : null}\n                />\n            </div>\n        </div>\n    )\n}\n export default Chat;"]},"metadata":{},"sourceType":"module"}